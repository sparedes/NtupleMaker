#include <iostream>
#include <cmath>
#include "TFile.h"
#include "TTree.h"
#include "TTree.h"
#include "TH1.h"
#include <TH2.h>

using namespace std;

void treeToHist()
{
  //read the Tree generated by the MakeTree algorithm and make histograms

  TFile *f = new TFile("allLocalmetTree.root");
  TTree *metTree = (TTree*)f->Get("metTree");
  float offlineMET;
  float hlt_cell_met;
  float hlt_mht_met;
  float hlt_topoCluster_met;
  float hlt_pufit_met;
  float hlt_pueta_met;
  metTree->SetBranchAddress("offlineMET",&offlineMET);
  metTree->SetBranchAddress("hlt_cell_met",&hlt_cell_met);
  metTree->SetBranchAddress("hlt_mht_met",&hlt_mht_met);
  metTree->SetBranchAddress("hlt_topoCluster_met",&hlt_topoCluster_met);
  metTree->SetBranchAddress("hlt_pufit_met",&hlt_pufit_met);
  metTree->SetBranchAddress("hlt_pueta_met",&hlt_pueta_met);

  //create histograms
  h_cell_met = new TH1D("cell_met", "Cell MET ;offline E_{T}^{miss}  [GeV]", 400,0,400);
  h_mht_met = new TH1D("mht_met", "mht MET ;offline E_{T}^{miss}  [GeV]", 400,0,400);
  h_pufit_met = new TH1D("pufit_met", "pufit MET ;offline E_{T}^{miss}  [GeV]", 400,0,400);
  h_offline_met = new TH1D("offline_met", "MET ;offline E_{T}^{miss}  [GeV]", 400,0,400);
  h2_offlineVscellMET = new TH2D("offlineVScellMet", "offline vs  cell  MET (xAOD#rightarrow Ntuple#rightarrow Histogram);offline E_{T}^{miss}, #mu invisible  [GeV];  cell E_{T}^{miss}  [GeV]", 400,0,400,400,0,400);
  h2_mhtVscellMET = new TH2D("mhtVScellMet", "mht vs  cell  MET (xAOD#rightarrow Ntuple#rightarrow Histogram);mht E_{T}^{miss}  [GeV];  cell E_{T}^{miss}  [GeV]", 400,0,400,400,0,400);
  h2_topoClusterVscellMET = new TH2D("topoClusterVScellMet", "topoCluster vs  cell  MET (xAOD#rightarrow Ntuple#rightarrow Histogram);topoCluster E_{T}^{miss}  [GeV];  cell E_{T}^{miss}  [GeV]", 400,0,400,400,0,400);
  h2_pufitVscellMET = new TH2D("pufitVScellMet", "pufit vs  cell  MET (xAOD#rightarrow Ntuple#rightarrow Histogram);pufit E_{T}^{miss}  [GeV];  cell E_{T}^{miss}  [GeV]", 400,0,400,400,0,400);
  h2_puetaVscellMET = new TH2D("puetaVScellMet", "pueta vs  cell  MET (xAOD#rightarrow Ntuple#rightarrow Histogram);pueta E_{T}^{miss}  [GeV];  cell E_{T}^{miss}  [GeV]", 400,0,400,400,0,400);

  h2_offlineVsmhtMET = new TH2D("offlineVSmhtMET", "offline vs  mht  MET (xAOD#rightarrow Ntuple#rightarrow Histogram);offline E_{T}^{miss}, #mu invisible  [GeV];  mht E_{T}^{miss}  [GeV]", 400,0,400,400,0,400);
  h2_cellVsmhtMET = new TH2D("cellVSmhtMET", "cell vs mht MET (xAOD#rightarrow Ntuple#rightarrow Histogram);mht E_{T}^{miss}  [GeV];  mht E_{T}^{miss}  [GeV]", 400,0,400,400,0,400);
  h2_topoClusterVsmhtMET = new TH2D("topoClusterVSmhtMET", "topoCluster vs  mht  MET (xAOD#rightarrow Ntuple#rightarrow Histogram);topoCluster E_{T}^{miss}  [GeV];  mht E_{T}^{miss}  [GeV]", 400,0,400,400,0,400);
  h2_pufitVsmhtMET = new TH2D("pufitVSmhtMET", "pufit vs  mht  MET (xAOD#rightarrow Ntuple#rightarrow Histogram);pufit E_{T}^{miss}  [GeV];  mht E_{T}^{miss}  [GeV]", 400,0,400,400,0,400);
  h2_puetaVsmhtMET = new TH2D("puetaVSmhtMET", "pueta vs  mht  MET (xAOD#rightarrow Ntuple#rightarrow Histogram);pueta E_{T}^{miss}  [GeV];  mht E_{T}^{miss}  [GeV]", 400,0,400,400,0,400);


  //read all entries and fill the histograms
  cout<<"before loop"<<endl;
  Long64_t nentries = metTree->GetEntries();
  for (Long64_t i=0;i<nentries;i++) {
    metTree->GetEntry(i);
    h_offline_met->Fill(offlineMET);
    h_cell_met->Fill(hlt_cell_met);
    h_mht_met->Fill(hlt_mht_met);
    h_pufit_met->Fill(hlt_pufit_met);
    h2_offlineVscellMET->Fill(offlineMET,hlt_cell_met);
    h2_mhtVscellMET->Fill(hlt_mht_met,hlt_cell_met);
    h2_topoClusterVscellMET->Fill(hlt_topoCluster_met,hlt_cell_met);
    h2_pufitVscellMET->Fill(hlt_pufit_met,hlt_cell_met);
    h2_puetaVscellMET->Fill(hlt_pueta_met,hlt_cell_met);

    h2_offlineVsmhtMET->Fill(offlineMET,hlt_mht_met);
    h2_cellVsmhtMET->Fill(hlt_cell_met,hlt_mht_met);
    h2_topoClusterVsmhtMET->Fill(hlt_topoCluster_met,hlt_mht_met);
    h2_pufitVsmhtMET->Fill(hlt_pufit_met,hlt_mht_met);
    h2_puetaVsmhtMET->Fill(hlt_pueta_met,hlt_mht_met);
    if (i%5000 == 0) cout<<"processing event  "<<i<<endl<<"met values:  "<<offlineMET<<"     "<<hlt_cell_met<<endl;
  }
  cout<<"after loop"<<endl;
  
  cout<<"before new file"<<endl;

  TFile *myFile = new TFile("metHistograms.root","recreate");
  cout<<"after creating new file"<<endl;
  h_cell_met->Write(); 
  h_mht_met->Write(); 
  h_pufit_met->Write(); 
  h_offline_met->Write();
  h2_offlineVscellMET->Write();
  h2_mhtVscellMET->Write();
  h2_topoClusterVscellMET->Write();
  h2_pufitVscellMET->Write();
  h2_puetaVscellMET->Write();
  
  h2_offlineVsmhtMET->Write();
  h2_cellVsmhtMET->Write();
  h2_topoClusterVsmhtMET->Write();
  h2_pufitVsmhtMET->Write();
  h2_puetaVsmhtMET->Write();

  cout<<"closing new file"<<endl;
  myFile->Close();
  cout<<"after new file"<<endl;
  f->Close();
}

